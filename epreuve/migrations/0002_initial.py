# Generated by Django 5.0.1 on 2024-02-17 08:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("epreuve", "0001_initial"),
        ("inscription", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="epreuve",
            name="groupes_participants",
            field=models.ManyToManyField(
                related_name="epreuves",
                through="inscription.GroupeParticipeAEpreuve",
                to="auth.group",
            ),
        ),
        migrations.AddField(
            model_name="epreuve",
            name="referent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="epreuve_referent",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="exercice",
            name="auteur",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="exercice",
            name="epreuve",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="epreuve.epreuve"
            ),
        ),
        migrations.AddField(
            model_name="jeudetest",
            name="exercice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="epreuve.exercice"
            ),
        ),
        migrations.AddField(
            model_name="membrecomite",
            name="epreuve",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="epreuve.epreuve"
            ),
        ),
        migrations.AddField(
            model_name="membrecomite",
            name="membre",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="epreuve",
            name="comite",
            field=models.ManyToManyField(
                related_name="epreuves_comite",
                through="epreuve.MembreComite",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userepreuve",
            name="epreuve",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="association_UserEpreuve_Epreuve",
                to="epreuve.epreuve",
            ),
        ),
        migrations.AddField(
            model_name="userepreuve",
            name="participant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="association_UserEpreuve_User",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="userexercice",
            name="exercice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="association_UserExercice_Exercice",
                to="epreuve.exercice",
            ),
        ),
        migrations.AddField(
            model_name="userexercice",
            name="jeu_de_test",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="epreuve.jeudetest",
            ),
        ),
        migrations.AddField(
            model_name="userexercice",
            name="participant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="association_UserExercice_User",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="exercice",
            index=models.Index(fields=["epreuve"], name="Exercice_epreuve_474577_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="exercice",
            unique_together={("epreuve", "titre")},
        ),
        migrations.AddIndex(
            model_name="jeudetest",
            index=models.Index(
                fields=["exercice"], name="JeuDeTest_exercic_715cb2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="membrecomite",
            index=models.Index(
                fields=["epreuve", "membre"], name="MembreComit_epreuve_8e0baf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="membrecomite",
            index=models.Index(
                fields=["membre", "epreuve"], name="MembreComit_membre__c8d644_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="membrecomite",
            unique_together={("epreuve", "membre")},
        ),
        migrations.AddIndex(
            model_name="epreuve",
            index=models.Index(fields=["referent"], name="Epreuve_referen_cb6879_idx"),
        ),
        migrations.AddConstraint(
            model_name="epreuve",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("date_debut__isnull", True),
                        ("date_fin__isnull", True),
                        ("date_fin__gte", models.F("date_debut")),
                        _connector="OR",
                    )
                ),
                name="date_fin_apres_ou_egale_a_date_debut_si_non_null",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="epreuve",
            unique_together={("nom", "referent")},
        ),
        migrations.AddIndex(
            model_name="userepreuve",
            index=models.Index(
                fields=["participant", "epreuve"], name="UserEpreuve_partici_e8c70c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userepreuve",
            index=models.Index(
                fields=["epreuve", "participant"], name="UserEpreuve_epreuve_68a92c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userepreuve",
            unique_together={("participant", "epreuve")},
        ),
        migrations.AlterUniqueTogether(
            name="userexercice",
            unique_together={("participant", "exercice")},
        ),
    ]
